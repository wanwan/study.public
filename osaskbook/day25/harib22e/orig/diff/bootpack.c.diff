22,24c22,24
< 	unsigned char *buf_back, buf_mouse[256], *buf_win, *buf_cons[2];
< 	struct SHEET *sht_back, *sht_mouse, *sht_win, *sht_cons[2];
< 	struct TASK *task_a, *task_cons[2];
---
> 	unsigned char *buf_back, buf_mouse[256], *buf_win, *buf_cons;
> 	struct SHEET *sht_back, *sht_mouse, *sht_win, *sht_cons;
> 	struct TASK *task_a, *task_cons;
81,101c81,97
< 	for (i = 0; i < 2; i++) {
< 		sht_cons[i] = sheet_alloc(shtctl);
< 		buf_cons[i] = (unsigned char *) memman_alloc_4k(memman, 256 * 165);
< 		sheet_setbuf(sht_cons[i], buf_cons[i], 256, 165, -1); /* 透明色なし */
< 		make_window8(buf_cons[i], 256, 165, "console", 0);
< 		make_textbox8(sht_cons[i], 8, 28, 240, 128, COL8_000000);
< 		task_cons[i] = task_alloc();
< 		task_cons[i]->tss.esp = memman_alloc_4k(memman, 64 * 1024) + 64 * 1024 - 12;
< 		task_cons[i]->tss.eip = (int) &console_task;
< 		task_cons[i]->tss.es = 1 * 8;
< 		task_cons[i]->tss.cs = 2 * 8;
< 		task_cons[i]->tss.ss = 1 * 8;
< 		task_cons[i]->tss.ds = 1 * 8;
< 		task_cons[i]->tss.fs = 1 * 8;
< 		task_cons[i]->tss.gs = 1 * 8;
< 		*((int *) (task_cons[i]->tss.esp + 4)) = (int) sht_cons[i];
< 		*((int *) (task_cons[i]->tss.esp + 8)) = memtotal;
< 		task_run(task_cons[i], 2, 2); /* level=2, priority=2 */
< 		sht_cons[i]->task = task_cons[i];
< 		sht_cons[i]->flags |= 0x20;	/* カーソルあり */
< 	}
---
> 	sht_cons = sheet_alloc(shtctl);
> 	buf_cons = (unsigned char *) memman_alloc_4k(memman, 256 * 165);
> 	sheet_setbuf(sht_cons, buf_cons, 256, 165, -1); /* 透明色なし */
> 	make_window8(buf_cons, 256, 165, "console", 0);
> 	make_textbox8(sht_cons, 8, 28, 240, 128, COL8_000000);
> 	task_cons = task_alloc();
> 	task_cons->tss.esp = memman_alloc_4k(memman, 64 * 1024) + 64 * 1024 - 12;
> 	task_cons->tss.eip = (int) &console_task;
> 	task_cons->tss.es = 1 * 8;
> 	task_cons->tss.cs = 2 * 8;
> 	task_cons->tss.ss = 1 * 8;
> 	task_cons->tss.ds = 1 * 8;
> 	task_cons->tss.fs = 1 * 8;
> 	task_cons->tss.gs = 1 * 8;
> 	*((int *) (task_cons->tss.esp + 4)) = (int) sht_cons;
> 	*((int *) (task_cons->tss.esp + 8)) = memtotal;
> 	task_run(task_cons, 2, 2); /* level=2, priority=2 */
123,124c119
< 	sheet_slide(sht_cons[1], 56,  6);
< 	sheet_slide(sht_cons[0],  8,  2);
---
> 	sheet_slide(sht_cons, 32,  4);
127,131c122,125
< 	sheet_updown(sht_back,     0);
< 	sheet_updown(sht_cons[1],  1);
< 	sheet_updown(sht_cons[0],  2);
< 	sheet_updown(sht_win,      3);
< 	sheet_updown(sht_mouse,    4);
---
> 	sheet_updown(sht_back,  0);
> 	sheet_updown(sht_cons,  1);
> 	sheet_updown(sht_win,   2);
> 	sheet_updown(sht_mouse, 3);
132a127,128
> 	sht_cons->task = task_cons;
> 	sht_cons->flags |= 0x20;	/* カーソルあり */
236c232
< 				if (i == 256 + 0x3b && key_shift != 0 && task_cons[0]->tss.ss0 != 0) {	/* Shift+F1 */
---
> 				if (i == 256 + 0x3b && key_shift != 0 && task_cons->tss.ss0 != 0) {	/* Shift+F1 */
240,241c236,237
< 					task_cons[0]->tss.eax = (int) &(task_cons[0]->tss.esp0);
< 					task_cons[0]->tss.eip = (int) asm_end_app;
---
> 					task_cons->tss.eax = (int) &(task_cons->tss.esp0);
> 					task_cons->tss.eip = (int) asm_end_app;
304,305c300,301
< 												task_cons[0]->tss.eax = (int) &(task_cons[0]->tss.esp0);
< 												task_cons[0]->tss.eip = (int) asm_end_app;
---
> 												task_cons->tss.eax = (int) &(task_cons->tss.esp0);
> 												task_cons->tss.eip = (int) asm_end_app;
