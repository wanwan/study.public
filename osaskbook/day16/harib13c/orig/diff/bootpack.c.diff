6c6
< void make_window8(unsigned char *buf, int xsize, int ysize, char *title, char act);
---
> void make_window8(unsigned char *buf, int xsize, int ysize, char *title);
16a17
> 	struct TIMER *timer, *timer2, *timer3;
21a23,24
> 	struct SHEET *sht_back, *sht_mouse, *sht_win;
> 	unsigned char *buf_back, buf_mouse[256], *buf_win;
30,33c33
< 	unsigned char *buf_back, buf_mouse[256], *buf_win, *buf_win_b;
< 	struct SHEET *sht_back, *sht_mouse, *sht_win, *sht_win_b[3];
< 	struct TASK *task_a, *task_b[3];
< 	struct TIMER *timer;
---
> 	struct TASK *task_a, *task_b;
44a45,54
> 	timer = timer_alloc();
> 	timer_init(timer, &fifo, 10);
> 	timer_settime(timer, 1000);
> 	timer2 = timer_alloc();
> 	timer_init(timer2, &fifo, 3);
> 	timer_settime(timer2, 300);
> 	timer3 = timer_alloc();
> 	timer_init(timer3, &fifo, 1);
> 	timer_settime(timer3, 50);
> 
52,55d61
< 	task_a = task_init(memman);
< 	fifo.task = task_a;
< 
< 	/* sht_back */
56a63,64
> 	sht_mouse = sheet_alloc(shtctl);
> 	sht_win   = sheet_alloc(shtctl);
57a66
> 	buf_win   = (unsigned char *) memman_alloc_4k(memman, 160 * 52);
58a68,69
> 	sheet_setbuf(sht_mouse, buf_mouse, 16, 16, 99);
> 	sheet_setbuf(sht_win, buf_win, 160, 52, -1); /* 透明色なし */
60,86c71,73
< 
< 	/* sht_win_b */
< 	for (i = 0; i < 3; i++) {
< 		sht_win_b[i] = sheet_alloc(shtctl);
< 		buf_win_b = (unsigned char *) memman_alloc_4k(memman, 144 * 52);
< 		sheet_setbuf(sht_win_b[i], buf_win_b, 144, 52, -1); /* 透明色なし */
< 		sprintf(s, "task_b%d", i);
< 		make_window8(buf_win_b, 144, 52, s, 0);
< 		task_b[i] = task_alloc();
< 		task_b[i]->tss.esp = memman_alloc_4k(memman, 64 * 1024) + 64 * 1024 - 8;
< 		task_b[i]->tss.eip = (int) &task_b_main;
< 		task_b[i]->tss.es = 1 * 8;
< 		task_b[i]->tss.cs = 2 * 8;
< 		task_b[i]->tss.ss = 1 * 8;
< 		task_b[i]->tss.ds = 1 * 8;
< 		task_b[i]->tss.fs = 1 * 8;
< 		task_b[i]->tss.gs = 1 * 8;
< 		*((int *) (task_b[i]->tss.esp + 4)) = (int) sht_win_b[i];
< 		task_run(task_b[i]);
< 	}
< 
< 	/* sht_win */
< 	sht_win   = sheet_alloc(shtctl);
< 	buf_win   = (unsigned char *) memman_alloc_4k(memman, 160 * 52);
< 	sheet_setbuf(sht_win, buf_win, 144, 52, -1); /* 透明色なし */
< 	make_window8(buf_win, 144, 52, "task_a", 1);
< 	make_textbox8(sht_win, 8, 28, 128, 16, COL8_FFFFFF);
---
> 	init_mouse_cursor8(buf_mouse, 99);
> 	make_window8(buf_win, 160, 52, "window");
> 	make_textbox8(sht_win, 8, 28, 144, 16, COL8_FFFFFF);
89,96c76
< 	timer = timer_alloc();
< 	timer_init(timer, &fifo, 1);
< 	timer_settime(timer, 50);
< 
< 	/* sht_mouse */
< 	sht_mouse = sheet_alloc(shtctl);
< 	sheet_setbuf(sht_mouse, buf_mouse, 16, 16, 99);
< 	init_mouse_cursor8(buf_mouse, 99);
---
> 	sheet_slide(sht_back, 0, 0);
99,104d78
< 
< 	sheet_slide(sht_back, 0, 0);
< 	sheet_slide(sht_win_b[0], 168,  56);
< 	sheet_slide(sht_win_b[1],   8, 116);
< 	sheet_slide(sht_win_b[2], 168, 116);
< 	sheet_slide(sht_win,        8,  56);
106,111c80,83
< 	sheet_updown(sht_back,     0);
< 	sheet_updown(sht_win_b[0], 1);
< 	sheet_updown(sht_win_b[1], 2);
< 	sheet_updown(sht_win_b[2], 3);
< 	sheet_updown(sht_win,      4);
< 	sheet_updown(sht_mouse,    5);
---
> 	sheet_slide(sht_win, 80, 72);
> 	sheet_updown(sht_back,  0);
> 	sheet_updown(sht_win,   1);
> 	sheet_updown(sht_mouse, 2);
117a90,103
> 	task_a = task_init(memman);
> 	fifo.task = task_a;
> 	task_b = task_alloc();
> 	task_b->tss.esp = memman_alloc_4k(memman, 64 * 1024) + 64 * 1024 - 8;
> 	task_b->tss.eip = (int) &task_b_main;
> 	task_b->tss.es = 1 * 8;
> 	task_b->tss.cs = 2 * 8;
> 	task_b->tss.ss = 1 * 8;
> 	task_b->tss.ds = 1 * 8;
> 	task_b->tss.fs = 1 * 8;
> 	task_b->tss.gs = 1 * 8;
> 	*((int *) (task_b->tss.esp + 4)) = (int) sht_back;
> 	task_run(task_b);
> 
130c116
< 					if (keytable[i - 256] != 0 && cursor_x < 128) { /* 通常文字 */
---
> 					if (keytable[i - 256] != 0 && cursor_x < 144) { /* 通常文字 */
182a169,172
> 			} else if (i == 10) { /* 10秒タイマ */
> 				putfonts8_asc_sht(sht_back, 0, 64, COL8_FFFFFF, COL8_008484, "10[sec]", 7);
> 			} else if (i == 3) { /* 3秒タイマ */
> 				putfonts8_asc_sht(sht_back, 0, 80, COL8_FFFFFF, COL8_008484, "3[sec]", 6);
185c175
< 					timer_init(timer, &fifo, 0); /* 次は0を */
---
> 					timer_init(timer3, &fifo, 0); /* 次は0を */
188c178
< 					timer_init(timer, &fifo, 1); /* 次は1を */
---
> 					timer_init(timer3, &fifo, 1); /* 次は1を */
191c181
< 				timer_settime(timer, 50);
---
> 				timer_settime(timer3, 50);
199c189
< void make_window8(unsigned char *buf, int xsize, int ysize, char *title, char act)
---
> void make_window8(unsigned char *buf, int xsize, int ysize, char *title)
218,225c208
< 	char c, tc, tbc;
< 	if (act != 0) {
< 		tc = COL8_FFFFFF;
< 		tbc = COL8_000084;
< 	} else {
< 		tc = COL8_C6C6C6;
< 		tbc = COL8_848484;
< 	}
---
> 	char c;
233c216
< 	boxfill8(buf, xsize, tbc,         3,         3,         xsize - 4, 20       );
---
> 	boxfill8(buf, xsize, COL8_000084, 3,         3,         xsize - 4, 20       );
236c219
< 	putfonts8_asc(buf, xsize, 24, 4, tc, title);
---
> 	putfonts8_asc(buf, xsize, 24, 4, COL8_FFFFFF, title);
278c261
< void task_b_main(struct SHEET *sht_win_b)
---
> void task_b_main(struct SHEET *sht_back)
281c264
< 	struct TIMER *timer_1s;
---
> 	struct TIMER *timer_put, *timer_1s;
285a269,271
> 	timer_put = timer_alloc();
> 	timer_init(timer_put, &fifo, 1);
> 	timer_settime(timer_put, 1);
298c284,288
< 			if (i == 100) {
---
> 			if (i == 1) {
> 				sprintf(s, "%11d", count);
> 				putfonts8_asc_sht(sht_back, 0, 144, COL8_FFFFFF, COL8_008484, s, 11);
> 				timer_settime(timer_put, 1);
> 			} else if (i == 100) {
300c290
< 				putfonts8_asc_sht(sht_win_b, 24, 28, COL8_000000, COL8_C6C6C6, s, 11);
---
> 				putfonts8_asc_sht(sht_back, 0, 128, COL8_FFFFFF, COL8_008484, s, 11);
