17d16
< 	struct SEGMENT_DESCRIPTOR *gdt = (struct SEGMENT_DESCRIPTOR *) ADR_GDT;
164c163
< 											break;	/* 4で割り切れたらbreak */
---
> 											break;	/* 32で割り切れたらbreak */
181,219d179
< 							memman_free_4k(memman, (int) p, finfo[x].size);
< 						} else {
< 							/* ファイルが見つからなかった場合 */
< 							putfonts8_asc_sht(sheet, 8, cursor_y, COL8_FFFFFF, COL8_000000, "File not found.", 15);
< 							cursor_y = cons_newline(cursor_y, sheet);
< 						}
< 						cursor_y = cons_newline(cursor_y, sheet);
< 					} else if (strcmp(cmdline, "hlt") == 0) {
< 						/* hlt.hrbアプリケーションを起動 */
< 						for (y = 0; y < 11; y++) {
< 							s[y] = ' ';
< 						}
< 						s[0] = 'H';
< 						s[1] = 'L';
< 						s[2] = 'T';
< 						s[8] = 'H';
< 						s[9] = 'R';
< 						s[10] = 'B';
< 						for (x = 0; x < 224; ) {
< 							if (finfo[x].name[0] == 0x00) {
< 								break;
< 							}
< 							if ((finfo[x].type & 0x18) == 0) {
< 								for (y = 0; y < 11; y++) {
< 									if (finfo[x].name[y] != s[y]) {
< 										goto hlt_next_file;
< 									}
< 								}
< 								break; /* ファイルが見つかった */
< 							}
< 		hlt_next_file:
< 							x++;
< 						}
< 						if (x < 224 && finfo[x].name[0] != 0x00) {
< 							/* ファイルが見つかった場合 */
< 							p = (char *) memman_alloc_4k(memman, finfo[x].size);
< 							file_loadfile(finfo[x].clustno, finfo[x].size, p, fat, (char *) (ADR_DISKIMG + 0x003e00));
< 							set_segmdesc(gdt + 1003, finfo[x].size - 1, (int) p, AR_CODE32_ER);
< 							farjmp(0, 1003 * 8);
