10,12d9
< #define TIMER_FLAGS_ALLOC		1	/* 確保した状態 */
< #define TIMER_FLAGS_USING		2	/* タイマ作動中 */
< 
15d11
< 	int i;
20,22c16
< 	for (i = 0; i < MAX_TIMER; i++) {
< 		timerctl.timer[i].flags = 0; /* 未使用 */
< 	}
---
> 	timerctl.timeout = 0;
26c20
< struct TIMER *timer_alloc(void)
---
> void inthandler20(int *esp)
28,32c22,27
< 	int i;
< 	for (i = 0; i < MAX_TIMER; i++) {
< 		if (timerctl.timer[i].flags == 0) {
< 			timerctl.timer[i].flags = TIMER_FLAGS_ALLOC;
< 			return &timerctl.timer[i];
---
> 	io_out8(PIC0_OCW2, 0x60);	/* IRQ-00受付完了をPICに通知 */
> 	timerctl.count++;
> 	if (timerctl.timeout > 0) { /* タイムアウトが設定されている */
> 		timerctl.timeout--;
> 		if (timerctl.timeout == 0) {
> 			fifo8_put(timerctl.fifo, timerctl.data);
35,40d29
< 	return 0; /* 見つからなかった */
< }
< 
< void timer_free(struct TIMER *timer)
< {
< 	timer->flags = 0; /* 未使用 */
44c33
< void timer_init(struct TIMER *timer, struct FIFO8 *fifo, unsigned char data)
---
> void settimer(unsigned int timeout, struct FIFO8 *fifo, unsigned char data)
46,71c35,41
< 	timer->fifo = fifo;
< 	timer->data = data;
< 	return;
< }
< 
< void timer_settime(struct TIMER *timer, unsigned int timeout)
< {
< 	timer->timeout = timeout;
< 	timer->flags = TIMER_FLAGS_USING;
< 	return;
< }
< 
< void inthandler20(int *esp)
< {
< 	int i;
< 	io_out8(PIC0_OCW2, 0x60);	/* IRQ-00受付完了をPICに通知 */
< 	timerctl.count++;
< 	for (i = 0; i < MAX_TIMER; i++) {
< 		if (timerctl.timer[i].flags == TIMER_FLAGS_USING) {
< 			timerctl.timer[i].timeout--;
< 			if (timerctl.timer[i].timeout == 0) {
< 				timerctl.timer[i].flags = TIMER_FLAGS_ALLOC;
< 				fifo8_put(timerctl.timer[i].fifo, timerctl.timer[i].data);
< 			}
< 		}
< 	}
---
> 	int eflags;
> 	eflags = io_load_eflags();
> 	io_cli();
> 	timerctl.timeout = timeout;
> 	timerctl.fifo = fifo;
> 	timerctl.data = data;
> 	io_store_eflags(eflags);
