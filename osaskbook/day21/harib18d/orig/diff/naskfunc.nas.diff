20c20
< 		GLOBAL	_asm_hrb_api, _start_app
---
> 		GLOBAL	_asm_hrb_api
119,122d118
< 		MOV		AX,SS
< 		CMP		AX,1*8
< 		JNE		.from_app
< ;	OSが動いているときに割り込まれたのでほぼ今までどおり
124,125c120
< 		PUSH	SS				; 割り込まれたときのSSを保存
< 		PUSH	EAX				; 割り込まれたときのESPを保存
---
> 		PUSH	EAX
130,147d124
< 		ADD		ESP,8
< 		POPAD
< 		POP		DS
< 		POP		ES
< 		IRETD
< .from_app:
< ;	アプリが動いているときに割り込まれた
< 		MOV		EAX,1*8
< 		MOV		DS,AX			; とりあえずDSだけOS用にする
< 		MOV		ECX,[0xfe4]		; OSのESP
< 		ADD		ECX,-8
< 		MOV		[ECX+4],SS		; 割り込まれたときのSSを保存
< 		MOV		[ECX  ],ESP		; 割り込まれたときのESPを保存
< 		MOV		SS,AX
< 		MOV		ES,AX
< 		MOV		ESP,ECX
< 		CALL	_inthandler20
< 		POP		ECX
149,150d125
< 		MOV		SS,AX			; SSをアプリ用に戻す
< 		MOV		ESP,ECX			; ESPもアプリ用に戻す
160,163d134
< 		MOV		AX,SS
< 		CMP		AX,1*8
< 		JNE		.from_app
< ;	OSが動いているときに割り込まれたのでほぼ今までどおり
165,166c136
< 		PUSH	SS				; 割り込まれたときのSSを保存
< 		PUSH	EAX				; 割り込まれたときのESPを保存
---
> 		PUSH	EAX
171,188d140
< 		ADD		ESP,8
< 		POPAD
< 		POP		DS
< 		POP		ES
< 		IRETD
< .from_app:
< ;	アプリが動いているときに割り込まれた
< 		MOV		EAX,1*8
< 		MOV		DS,AX			; とりあえずDSだけOS用にする
< 		MOV		ECX,[0xfe4]		; OSのESP
< 		ADD		ECX,-8
< 		MOV		[ECX+4],SS		; 割り込まれたときのSSを保存
< 		MOV		[ECX  ],ESP		; 割り込まれたときのESPを保存
< 		MOV		SS,AX
< 		MOV		ES,AX
< 		MOV		ESP,ECX
< 		CALL	_inthandler21
< 		POP		ECX
190,191d141
< 		MOV		SS,AX			; SSをアプリ用に戻す
< 		MOV		ESP,ECX			; ESPもアプリ用に戻す
201,204d150
< 		MOV		AX,SS
< 		CMP		AX,1*8
< 		JNE		.from_app
< ;	OSが動いているときに割り込まれたのでほぼ今までどおり
206,207c152
< 		PUSH	SS				; 割り込まれたときのSSを保存
< 		PUSH	EAX				; 割り込まれたときのESPを保存
---
> 		PUSH	EAX
212,229d156
< 		ADD		ESP,8
< 		POPAD
< 		POP		DS
< 		POP		ES
< 		IRETD
< .from_app:
< ;	アプリが動いているときに割り込まれた
< 		MOV		EAX,1*8
< 		MOV		DS,AX			; とりあえずDSだけOS用にする
< 		MOV		ECX,[0xfe4]		; OSのESP
< 		ADD		ECX,-8
< 		MOV		[ECX+4],SS		; 割り込まれたときのSSを保存
< 		MOV		[ECX  ],ESP		; 割り込まれたときのESPを保存
< 		MOV		SS,AX
< 		MOV		ES,AX
< 		MOV		ESP,ECX
< 		CALL	_inthandler27
< 		POP		ECX
231,232d157
< 		MOV		SS,AX			; SSをアプリ用に戻す
< 		MOV		ESP,ECX			; ESPもアプリ用に戻す
242,245d166
< 		MOV		AX,SS
< 		CMP		AX,1*8
< 		JNE		.from_app
< ;	OSが動いているときに割り込まれたのでほぼ今までどおり
247,248c168
< 		PUSH	SS				; 割り込まれたときのSSを保存
< 		PUSH	EAX				; 割り込まれたときのESPを保存
---
> 		PUSH	EAX
253,270d172
< 		ADD		ESP,8
< 		POPAD
< 		POP		DS
< 		POP		ES
< 		IRETD
< .from_app:
< ;	アプリが動いているときに割り込まれた
< 		MOV		EAX,1*8
< 		MOV		DS,AX			; とりあえずDSだけOS用にする
< 		MOV		ECX,[0xfe4]		; OSのESP
< 		ADD		ECX,-8
< 		MOV		[ECX+4],SS		; 割り込まれたときのSSを保存
< 		MOV		[ECX  ],ESP		; 割り込まれたときのESPを保存
< 		MOV		SS,AX
< 		MOV		ES,AX
< 		MOV		ESP,ECX
< 		CALL	_inthandler2c
< 		POP		ECX
272,273d173
< 		MOV		SS,AX			; SSをアプリ用に戻す
< 		MOV		ESP,ECX			; ESPもアプリ用に戻す
321,354c221,223
< 		; 都合のいいことに最初から割り込み禁止になっている
< 		PUSH	DS
< 		PUSH	ES
< 		PUSHAD		; 保存のためのPUSH
< 		MOV		EAX,1*8
< 		MOV		DS,AX			; とりあえずDSだけOS用にする
< 		MOV		ECX,[0xfe4]		; OSのESP
< 		ADD		ECX,-40
< 		MOV		[ECX+32],ESP	; アプリのESPを保存
< 		MOV		[ECX+36],SS		; アプリのSSを保存
< 
< ; PUSHADした値をシステムのスタックにコピーする
< 		MOV		EDX,[ESP   ]
< 		MOV		EBX,[ESP+ 4]
< 		MOV		[ECX   ],EDX	; hrb_apiに渡すためコピー
< 		MOV		[ECX+ 4],EBX	; hrb_apiに渡すためコピー
< 		MOV		EDX,[ESP+ 8]
< 		MOV		EBX,[ESP+12]
< 		MOV		[ECX+ 8],EDX	; hrb_apiに渡すためコピー
< 		MOV		[ECX+12],EBX	; hrb_apiに渡すためコピー
< 		MOV		EDX,[ESP+16]
< 		MOV		EBX,[ESP+20]
< 		MOV		[ECX+16],EDX	; hrb_apiに渡すためコピー
< 		MOV		[ECX+20],EBX	; hrb_apiに渡すためコピー
< 		MOV		EDX,[ESP+24]
< 		MOV		EBX,[ESP+28]
< 		MOV		[ECX+24],EDX	; hrb_apiに渡すためコピー
< 		MOV		[ECX+28],EBX	; hrb_apiに渡すためコピー
< 
< 		MOV		ES,AX			; 残りのセグメントレジスタもOS用にする
< 		MOV		SS,AX
< 		MOV		ESP,ECX
< 		STI			; やっと割り込み許可
< 
---
> 		STI
> 		PUSHAD	; 保存のためのPUSH
> 		PUSHAD	; hrb_apiに渡すためのPUSH
356,361c225
< 
< 		MOV		ECX,[ESP+32]	; アプリのESPを思い出す
< 		MOV		EAX,[ESP+36]	; アプリのSSを思い出す
< 		CLI
< 		MOV		SS,AX
< 		MOV		ESP,ECX
---
> 		ADD		ESP,32
363,386c227
< 		POP		ES
< 		POP		DS
< 		IRETD		; この命令が自動でSTIしてくれる
< 
< _start_app:		; void start_app(int eip, int cs, int esp, int ds);
< 		PUSHAD		; 32ビットレジスタを全部保存しておく
< 		MOV		EAX,[ESP+36]	; アプリ用のEIP
< 		MOV		ECX,[ESP+40]	; アプリ用のCS
< 		MOV		EDX,[ESP+44]	; アプリ用のESP
< 		MOV		EBX,[ESP+48]	; アプリ用のDS/SS
< 		MOV		[0xfe4],ESP		; OS用のESP
< 		CLI			; 切り替え中に割り込みが起きてほしくないので禁止
< 		MOV		ES,BX
< 		MOV		SS,BX
< 		MOV		DS,BX
< 		MOV		FS,BX
< 		MOV		GS,BX
< 		MOV		ESP,EDX
< 		STI			; 切り替え完了なので割り込み可能に戻す
< 		PUSH	ECX				; far-CALLのためにPUSH（cs）
< 		PUSH	EAX				; far-CALLのためにPUSH（eip）
< 		CALL	FAR [ESP]		; アプリを呼び出す
< 
< ;	アプリが終了するとここに帰ってくる
---
> 		IRETD
388,398d228
< 		MOV		EAX,1*8			; OS用のDS/SS
< 		CLI			; また切り替えるので割り込み禁止
< 		MOV		ES,AX
< 		MOV		SS,AX
< 		MOV		DS,AX
< 		MOV		FS,AX
< 		MOV		GS,AX
< 		MOV		ESP,[0xfe4]
< 		STI			; 切り替え完了なので割り込み可能に戻す
< 		POPAD	; 保存しておいたレジスタを回復
< 		RET
