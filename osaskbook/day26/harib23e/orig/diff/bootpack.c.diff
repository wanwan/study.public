9a10
> struct SHEET *open_console(struct SHTCTL *shtctl, unsigned int memtotal);
17c18
< 	int fifobuf[128], keycmd_buf[32], *cons_fifo[2];
---
> 	int fifobuf[128], keycmd_buf[32];
22c23
< 	unsigned char *buf_back, buf_mouse[256], *buf_cons[2];
---
> 	unsigned char *buf_back, buf_mouse[256];
24c25
< 	struct TASK *task_a, *task_cons[2], *task;
---
> 	struct TASK *task_a, *task;
79,101c80,81
< 	for (i = 0; i < 2; i++) {
< 		sht_cons[i] = sheet_alloc(shtctl);
< 		buf_cons[i] = (unsigned char *) memman_alloc_4k(memman, 256 * 165);
< 		sheet_setbuf(sht_cons[i], buf_cons[i], 256, 165, -1); /* 透明色なし */
< 		make_window8(buf_cons[i], 256, 165, "console", 0);
< 		make_textbox8(sht_cons[i], 8, 28, 240, 128, COL8_000000);
< 		task_cons[i] = task_alloc();
< 		task_cons[i]->tss.esp = memman_alloc_4k(memman, 64 * 1024) + 64 * 1024 - 12;
< 		task_cons[i]->tss.eip = (int) &console_task;
< 		task_cons[i]->tss.es = 1 * 8;
< 		task_cons[i]->tss.cs = 2 * 8;
< 		task_cons[i]->tss.ss = 1 * 8;
< 		task_cons[i]->tss.ds = 1 * 8;
< 		task_cons[i]->tss.fs = 1 * 8;
< 		task_cons[i]->tss.gs = 1 * 8;
< 		*((int *) (task_cons[i]->tss.esp + 4)) = (int) sht_cons[i];
< 		*((int *) (task_cons[i]->tss.esp + 8)) = memtotal;
< 		task_run(task_cons[i], 2, 2); /* level=2, priority=2 */
< 		sht_cons[i]->task = task_cons[i];
< 		sht_cons[i]->flags |= 0x20;	/* カーソルあり */
< 		cons_fifo[i] = (int *) memman_alloc_4k(memman, 128 * 4);
< 		fifo32_init(&task_cons[i]->fifo, 128, cons_fifo[i], task_cons[i]);
< 	}
---
> 	sht_cons[0] = open_console(shtctl, memtotal);
> 	sht_cons[1] = 0; /* まだ開いてない */
111,112c91
< 	sheet_slide(sht_cons[1], 56,  6);
< 	sheet_slide(sht_cons[0],  8,  2);
---
> 	sheet_slide(sht_cons[0], 32, 4);
115,117c94,95
< 	sheet_updown(sht_cons[1],  1);
< 	sheet_updown(sht_cons[0],  2);
< 	sheet_updown(sht_mouse,    3);
---
> 	sheet_updown(sht_cons[0],  1);
> 	sheet_updown(sht_mouse,    2);
209c187
< 				if (i == 256 + 0x3b && key_shift != 0) {
---
> 				if (i == 256 + 0x3b && key_shift != 0) {	/* Shift+F1 */
211c189
< 					if (task != 0 && task->tss.ss0 != 0) {	/* Shift+F1 */
---
> 					if (task != 0 && task->tss.ss0 != 0) {
218a197,205
> 				if (i == 256 + 0x3c && key_shift != 0 && sht_cons[1] == 0) {	/* Shift+F2 */
> 					sht_cons[1] = open_console(shtctl, memtotal);
> 					sheet_slide(sht_cons[1], 32, 4);
> 					sheet_updown(sht_cons[1], shtctl->top);
> 					/* 新しく作ったコンソールを入力選択状態にする（そのほうが親切だよね？） */
> 					keywin_off(key_win);
> 					key_win = sht_cons[1];
> 					keywin_on(key_win);
> 				}
325a313,338
> struct SHEET *open_console(struct SHTCTL *shtctl, unsigned int memtotal)
> {
> 	struct MEMMAN *memman = (struct MEMMAN *) MEMMAN_ADDR;
> 	struct SHEET *sht = sheet_alloc(shtctl);
> 	unsigned char *buf = (unsigned char *) memman_alloc_4k(memman, 256 * 165);
> 	struct TASK *task = task_alloc();
> 	int *cons_fifo = (int *) memman_alloc_4k(memman, 128 * 4);
> 	sheet_setbuf(sht, buf, 256, 165, -1); /* 透明色なし */
> 	make_window8(buf, 256, 165, "console", 0);
> 	make_textbox8(sht, 8, 28, 240, 128, COL8_000000);
> 	task->tss.esp = memman_alloc_4k(memman, 64 * 1024) + 64 * 1024 - 12;
> 	task->tss.eip = (int) &console_task;
> 	task->tss.es = 1 * 8;
> 	task->tss.cs = 2 * 8;
> 	task->tss.ss = 1 * 8;
> 	task->tss.ds = 1 * 8;
> 	task->tss.fs = 1 * 8;
> 	task->tss.gs = 1 * 8;
> 	*((int *) (task->tss.esp + 4)) = (int) sht;
> 	*((int *) (task->tss.esp + 8)) = memtotal;
> 	task_run(task, 2, 2); /* level=2, priority=2 */
> 	sht->task = task;
> 	sht->flags |= 0x20;	/* カーソルあり */
> 	fifo32_init(&task->fifo, 128, cons_fifo, task);
> 	return sht;
> }
