9c9
< void console_task(struct SHEET *sheet);
---
> void task_b_main(struct SHEET *sht_back);
15d14
< 	struct SHTCTL *shtctl;
21a21
> 	struct SHTCTL *shtctl;
30,32c30,32
< 	unsigned char *buf_back, buf_mouse[256], *buf_win, *buf_cons;
< 	struct SHEET *sht_back, *sht_mouse, *sht_win, *sht_cons;
< 	struct TASK *task_a, *task_cons;
---
> 	unsigned char *buf_back, buf_mouse[256], *buf_win, *buf_win_b;
> 	struct SHEET *sht_back, *sht_mouse, *sht_win, *sht_win_b[3];
> 	struct TASK *task_a, *task_b[3];
62,78c62,80
< 	/* sht_cons */
< 	sht_cons = sheet_alloc(shtctl);
< 	buf_cons = (unsigned char *) memman_alloc_4k(memman, 256 * 165);
< 	sheet_setbuf(sht_cons, buf_cons, 256, 165, -1); /* 透明色なし */
< 	make_window8(buf_cons, 256, 165, "console", 0);
< 	make_textbox8(sht_cons, 8, 28, 240, 128, COL8_000000);
< 	task_cons = task_alloc();
< 	task_cons->tss.esp = memman_alloc_4k(memman, 64 * 1024) + 64 * 1024 - 8;
< 	task_cons->tss.eip = (int) &console_task;
< 	task_cons->tss.es = 1 * 8;
< 	task_cons->tss.cs = 2 * 8;
< 	task_cons->tss.ss = 1 * 8;
< 	task_cons->tss.ds = 1 * 8;
< 	task_cons->tss.fs = 1 * 8;
< 	task_cons->tss.gs = 1 * 8;
< 	*((int *) (task_cons->tss.esp + 4)) = (int) sht_cons;
< 	task_run(task_cons, 2, 2); /* level=2, priority=2 */
---
> 	/* sht_win_b */
> 	for (i = 0; i < 3; i++) {
> 		sht_win_b[i] = sheet_alloc(shtctl);
> 		buf_win_b = (unsigned char *) memman_alloc_4k(memman, 144 * 52);
> 		sheet_setbuf(sht_win_b[i], buf_win_b, 144, 52, -1); /* 透明色なし */
> 		sprintf(s, "task_b%d", i);
> 		make_window8(buf_win_b, 144, 52, s, 0);
> 		task_b[i] = task_alloc();
> 		task_b[i]->tss.esp = memman_alloc_4k(memman, 64 * 1024) + 64 * 1024 - 8;
> 		task_b[i]->tss.eip = (int) &task_b_main;
> 		task_b[i]->tss.es = 1 * 8;
> 		task_b[i]->tss.cs = 2 * 8;
> 		task_b[i]->tss.ss = 1 * 8;
> 		task_b[i]->tss.ds = 1 * 8;
> 		task_b[i]->tss.fs = 1 * 8;
> 		task_b[i]->tss.gs = 1 * 8;
> 		*((int *) (task_b[i]->tss.esp + 4)) = (int) sht_win_b[i];
> 		/* task_run(task_b[i], 2, i + 1); */
> 	}
99,101c101,105
< 	sheet_slide(sht_back,  0,  0);
< 	sheet_slide(sht_cons, 32,  4);
< 	sheet_slide(sht_win,  64, 56);
---
> 	sheet_slide(sht_back, 0, 0);
> 	sheet_slide(sht_win_b[0], 168,  56);
> 	sheet_slide(sht_win_b[1],   8, 116);
> 	sheet_slide(sht_win_b[2], 168, 116);
> 	sheet_slide(sht_win,        8,  56);
103,106c107,112
< 	sheet_updown(sht_back,  0);
< 	sheet_updown(sht_cons,  1);
< 	sheet_updown(sht_win,   2);
< 	sheet_updown(sht_mouse, 3);
---
> 	sheet_updown(sht_back,     0);
> 	sheet_updown(sht_win_b[0], 1);
> 	sheet_updown(sht_win_b[1], 2);
> 	sheet_updown(sht_win_b[2], 3);
> 	sheet_updown(sht_win,      4);
> 	sheet_updown(sht_mouse,    5);
273c279
< void console_task(struct SHEET *sheet)
---
> void task_b_main(struct SHEET *sht_win_b)
276,280c282,284
< 	struct TIMER *timer;
< 	struct TASK *task = task_now();
< 
< 	int i, fifobuf[128], cursor_x = 8, cursor_c = COL8_000000;
< 	fifo32_init(&fifo, 128, fifobuf, task);
---
> 	struct TIMER *timer_1s;
> 	int i, fifobuf[128], count = 0, count0 = 0;
> 	char s[12];
282,284c286,289
< 	timer = timer_alloc();
< 	timer_init(timer, &fifo, 1);
< 	timer_settime(timer, 50);
---
> 	fifo32_init(&fifo, 128, fifobuf, 0);
> 	timer_1s = timer_alloc();
> 	timer_init(timer_1s, &fifo, 100);
> 	timer_settime(timer_1s, 100);
286a292
> 		count++;
289d294
< 			task_sleep(task);
294,304c299,303
< 			if (i <= 1) { /* カーソル用タイマ */
< 				if (i != 0) {
< 					timer_init(timer, &fifo, 0); /* 次は0を */
< 					cursor_c = COL8_FFFFFF;
< 				} else {
< 					timer_init(timer, &fifo, 1); /* 次は1を */
< 					cursor_c = COL8_000000;
< 				}
< 				timer_settime(timer, 50);
< 				boxfill8(sheet->buf, sheet->bxsize, cursor_c, cursor_x, 28, cursor_x + 7, 43);
< 				sheet_refresh(sheet, cursor_x, 28, cursor_x + 8, 44);
---
> 			if (i == 100) {
> 				sprintf(s, "%11d", count - count0);
> 				putfonts8_asc_sht(sht_win_b, 24, 28, COL8_000000, COL8_C6C6C6, s, 11);
> 				count0 = count;
> 				timer_settime(timer_1s, 100);
